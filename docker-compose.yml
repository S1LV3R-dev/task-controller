services:
  backend:
    build: ./backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      PG_USER: task_controller
      PG_PASSWORD: task_controller
      PG_HOST: db
      PG_DATABASE: task_controller
      JWT_SECRET_KEY: 1e4ea4a763106046993c2112d7383198
    command: [ "sh", "-c", "alembic upgrade head && exec uvicorn main:app --host 0.0.0.0 --port 8000" ]
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/venv  # Prevents overwriting installed packages
    restart: unless-stopped

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: task_controller
      POSTGRES_PASSWORD: task_controller
      POSTGRES_DB: task_controller
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U task_controller -d task_controller" ]
      interval: 5s
      timeout: 3s
      retries: 5

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevents overwriting installed dependencies
    command: [ "sh", "-c", "npm run build && exec npm run preview" ]
    restart: unless-stopped

volumes:
  postgres_data:
